% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/db-packages.R
\name{annotation-tools}
\alias{annotation-tools}
\alias{is.annpkg}
\alias{is.orgpkg}
\alias{is.anndb}
\alias{biocann_mapname}
\alias{biocann_pkgname}
\alias{biocann_pkgobject}
\title{Annotation Tools}
\usage{
is.annpkg(x)

is.orgpkg(x)

is.anndb(x)

biocann_mapname(annotation, map, all = FALSE)

biocann_pkgname(x, noext = FALSE)

biocann_pkgobject(x)
}
\arguments{
\item{x}{an R object, either a character string or an annotation object.}

\item{annotation}{names of an annotation package, with \dQuote{.db}
suffix or not.}

\item{map}{name of a map, e.g., \dQuote{ENTREZID}.}

\item{all}{logical that indicates if all possible names should be
returned, and only the simple concatenation of the annotation
package's name without \dQuote{.db} and the map name.}

\item{noext}{logical that indicates if returned package names should
contain the extension '.db'.}
}
\description{
The \pkg{xbioc} package contains a few utility functions to facilitate
working with Bioconductor annotations, which extends or enhance functions
available in packages such as \pkg{annotate}.
}
\section{Functions}{
\itemize{
\item \code{is.annpkg}: \code{is.annpkg} tells if an object is the name of an annotation package.

\item \code{is.orgpkg}: tells if an object is an organism annotation package.

\item \code{is.anndb}: tells if an object is an annotation db object such as
\code{hgu133a.db}.

\item \code{biocann_mapname}: returns the name of a map in an annotation package.

\item \code{biocann_pkgname}: returns the name of an annotation package, formated from character strings
or extracted from annotation objects.

\item \code{biocann_pkgobject}: retrieve the \code{AnnotationDb} object for an annotation
package given as a string.
The package does not need to be already loaded but needs to be installed in a library that
is in the search path.
}}

\examples{
# check annotation pkg name
is.annpkg('aaa.db')
is.annpkg(c('bbb.db', 'ccc.db'))
is.annpkg(c('ddd', 'eee.db'))
# check AnnotationDb object
library(hgu133plus2.db)
is.anndb(hgu133plus2.db)
# build annotation bimap object names
biocann_mapname('hgu133plus2.db', 'ENTREZID')
# '.db' extension is skipped
biocann_mapname('hgu133plus2', 'ENTREZID')
# get all possible map names
biocann_mapname('hgu133plus2.db', 'ENTREZID', all=TRUE)
# annotation package name
biocann_pkgname('aa')
# extract the package name from annotation objects
biocann_pkgname(hgu133plus2.db)
biocann_pkgname(hgu133plus2ENTREZID)

# get AnnotationDb object
biocann_pkgobject('hgu133plus2') # extension can be skipped
# the package needs to be installed
try( biocann_pkgobject('aaa') )

}
